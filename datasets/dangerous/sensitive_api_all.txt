com.android.server.wifi.WifiService.getWifiServiceMessenger()android.os.Messenger
com.android.server.wifi.WifiService.getWifiEnabledState()int
com.android.server.wifi.WifiService.isScanAlwaysAvailable()boolean
com.android.server.wifi.WifiService.getWifiStateMachineMessenger()android.os.Messenger
com.android.server.wifi.WifiService.getConfigFile()java.lang.String
com.android.server.wifi.WifiService.getWifiApConfiguration()android.net.wifi.WifiConfiguration
com.android.server.wifi.WifiService.getWifiApEnabledState()int
com.android.server.wifi.WifiService.getConnectionInfo()android.net.wifi.WifiInfo
com.android.server.wifi.WifiService.pingSupplicant()boolean
com.android.server.wifi.WifiService.getDhcpInfo()android.net.DhcpInfo
com.android.server.wifi.WifiService.getScanResults(java.lang.String)java.util.List
com.android.server.wifi.WifiService.getConfiguredNetworks()java.util.List
com.android.server.wifi.WifiService.isMulticastEnabled()boolean
com.android.server.wifi.WifiService.getFrequencyBand()int
com.android.server.wifi.WifiService.getBatchedScanResults(java.lang.String)java.util.List
android.net.wifi.p2p.WifiP2pService.getMessenger()android.os.Messenger
com.android.server.ConnectivityService.startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)int
com.android.server.ConnectivityService.tether(java.lang.String)int
com.android.server.ConnectivityService.setMobileDataEnabled(boolean)void
com.android.server.ConnectivityService.stopUsingNetworkFeature(int,java.lang.String)int
com.android.server.ConnectivityService.requestRouteToHost(int,int)boolean
com.android.server.ConnectivityService.setRadio(int,boolean)boolean
com.android.server.ConnectivityService.setNetworkPreference(int)void
com.android.server.ConnectivityService.setRadios(boolean)boolean
com.android.server.ConnectivityService.untether(java.lang.String)int
com.android.server.ConnectivityService.setUsbTethering(boolean)int
com.android.server.ConnectivityService.requestRouteToHostAddress(int,[byte)boolean
com.android.server.wifi.WifiService.addOrUpdateNetwork(android.net.wifi.WifiConfiguration)int
com.android.server.wifi.WifiService.removeNetwork(int)boolean
com.android.server.wifi.WifiService.reassociate()void
com.android.server.wifi.WifiService.enableNetwork(int,boolean)boolean
com.android.server.wifi.WifiService.pollBatchedScan()void
com.android.server.wifi.WifiService.reconnect()void
com.android.server.wifi.WifiService.disconnect()void
com.android.server.wifi.WifiService.addToBlacklist(java.lang.String)void
com.android.server.wifi.WifiService.setWifiApConfiguration(android.net.wifi.WifiConfiguration)void
com.android.server.wifi.WifiService.stopBatchedScan(android.net.wifi.BatchedScanSettings)void
com.android.server.wifi.WifiService.clearBlacklist()void
com.android.server.wifi.WifiService.setWifiEnabled(boolean)boolean
com.android.server.wifi.WifiService.checkAndStartWifi()void
com.android.server.wifi.WifiService.setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)void
com.android.server.wifi.WifiService.setCountryCode(java.lang.String,boolean)void
com.android.server.wifi.WifiService.setFrequencyBand(int,boolean)void
com.android.server.wifi.WifiService.saveConfiguration()boolean
com.android.server.wifi.WifiService.disableNetwork(int)boolean
com.android.server.wm.WindowManagerService.reenableKeyguard(android.os.IBinder)void
com.android.server.am.ActivityManagerService.navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)boolean
com.android.server.wm.WindowManagerService.dismissKeyguard()void
com.android.server.wm.WindowManagerService.exitKeyguardSecurely(android.view.IOnKeyguardExitResult)void
com.android.server.wm.WindowManagerService.disableKeyguard(android.os.IBinder,java.lang.String)void
com.android.server.am.ActivityManagerService.startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)boolean
com.android.server.am.ActivityManagerService.startActivities(android.app.IApplicationThread,java.lang.String,[android.content.Intent,[java.lang.String,android.os.IBinder,android.os.Bundle,int)int
com.android.server.pm.PackageManagerService.installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)void
com.android.server.pm.PackageManagerService.installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)void
com.android.server.pm.PackageManagerService.installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)void
com.android.server.pm.PackageManagerService.installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int)void
com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy.getAdnRecordsInEf(int)java.util.List
com.android.internal.telephony.IccPhoneBookInterfaceManager.getAdnRecordsInEf(int)java.util.List
com.android.server.DropBoxManagerService.getNextEntry(java.lang.String,long)android.os.DropBoxManager$Entry
com.android.server.net.NetworkPolicyManagerService.getNetworkPolicies()[android.net.NetworkPolicy
com.android.internal.telephony.PhoneSubInfo.getDeviceId()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getMsisdn()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getDeviceSvn()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getSubscriberId()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getIccSerialNumber()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getVoiceMailNumber()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getGroupIdLevel1()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getLine1AlphaTag()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getLine1Number()java.lang.String
com.android.internal.telephony.PhoneSubInfo.getVoiceMailAlphaTag()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getMsisdn()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getVoiceMailAlphaTag()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getVoiceMailNumber()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getLine1AlphaTag()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getLine1Number()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getIccSerialNumber()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getGroupIdLevel1()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getDeviceSvn()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getDeviceId()java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getSubscriberId()java.lang.String
com.android.internal.telephony.IccSmsInterfaceManager.sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)void
com.android.internal.telephony.IccSmsInterfaceManager.updateMessageOnIccEf(java.lang.String,int,int,[byte)boolean
com.android.internal.telephony.IccSmsInterfaceManager.copyMessageToIccEf(java.lang.String,int,[)boolean
com.android.internal.telephony.IccSmsInterfaceManager.sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManager.sendData(java.lang.String,java.lang.String,java.lang.String,int,[android.app.PendingIntent)void
com.android.providers.telephony.TelephonyProvider.update(android.net.Uri,android.content.ContentValues,java.lang.String,[java.lang.String)int
com.android.providers.telephony.TelephonyProvider.query(android.net.Uri,[java.lang.String,java.lang.String,[java.lang.String,java.lang.String)android.database.Cursor
com.android.providers.telephony.TelephonyProvider.insert(android.net.Uri,android.content.ContentValues)android.net.Uri
com.android.photos.data.SQLiteContentProvider.applyBatch(java.util.ArrayList)[android.content.ContentProviderResult
com.android.providers.telephony.TelephonyProvider.delete(android.net.Uri,java.lang.String,[java.lang.String)int
android.content.ContentProvider.query(android.net.Uri,[java.lang.String,java.lang.String,[java.lang.String,java.lang.String,android.os.CancellationSignal)android.database.Cursor
android.content.ContentProvider.rejectQuery(android.net.Uri,[java.lang.String,java.lang.String,[java.lang.String,java.lang.String,android.os.CancellationSignal)android.database.Cursor
android.content.ContentProviderOperation.apply(android.content.ContentProvider,[android.content.ContentProviderResult,int)android.content.ContentProviderResult
android.content.ContentProvider.bulkInsert(android.net.Uri,[android.content.ContentValues)int
android.content.ContentProvider.applyBatch(java.util.ArrayList)[android.content.ContentProviderResult
com.android.browser.provider.SQLiteContentProvider.applyBatch(java.util.ArrayList)[android.content.ContentProviderResult
com.android.common.content.SQLiteContentProvider.applyBatch(java.util.ArrayList)[android.content.ContentProviderResult
com.android.email.provider.EmailProvider.dump(java.io.FileDescriptor,java.io.PrintWriter,[java.lang.String)void
com.android.email.provider.EmailProvider.query(android.net.Uri,[java.lang.String,java.lang.String,[java.lang.String,java.lang.String)android.database.Cursor
com.android.email.provider.EmailProvider.applyBatch(java.util.ArrayList)[android.content.ContentProviderResult
com.android.email.provider.EmailProvider.call(java.lang.String,java.lang.String,android.os.Bundle)android.os.Bundle
com.android.internal.telephony.IccPhoneBookInterfaceManager.updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)boolean
com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy.updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)boolean
com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy.updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)boolean
com.android.internal.telephony.IccPhoneBookInterfaceManager.updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)boolean
com.android.server.power.PowerManagerService.setStayOnSetting(int)void
com.android.server.wifi.WifiServiceImpl.getDhcpInfo()android.net.DhcpInfo
com.android.server.wifi.WifiServiceImpl.getChannelList()java.util.List
com.android.server.wifi.p2p.WifiP2pServiceImpl.getP2pStateMachineMessenger()android.os.Messenger
com.android.server.wifi.WifiServiceImpl.getSupportedFeatures()int
com.android.server.wifi.WifiServiceImpl.getFrequencyBand()int
com.android.server.wifi.WifiServiceImpl.reportActivityInfo()android.net.wifi.WifiActivityEnergyInfo
com.android.server.wifi.WifiServiceImpl.getConnectionInfo()android.net.wifi.WifiInfo
com.android.server.wifi.WifiServiceImpl.pingSupplicant()boolean
com.android.server.wifi.WifiServiceImpl.getScanResults(java.lang.String)java.util.List
com.android.server.wifi.WifiServiceImpl.getPrivilegedConfiguredNetworks()java.util.List
com.android.server.wifi.p2p.WifiP2pServiceImpl.getMessenger()android.os.Messenger
com.android.server.wifi.WifiServiceImpl.isScanAlwaysAvailable()boolean
com.android.server.wifi.WifiServiceImpl.getWifiEnabledState()int
com.android.server.wifi.WifiServiceImpl.setAllowScansWithTraffic(int)void
com.android.server.wifi.WifiServiceImpl.getAggressiveHandover()int
com.android.server.wifi.WifiServiceImpl.getBatchedScanResults(java.lang.String)java.util.List
com.android.server.wifi.WifiServiceImpl.enableVerboseLogging(int)void
com.android.server.wifi.WifiServiceImpl.enableAggressiveHandover(int)void
com.android.server.wifi.WifiServiceImpl.getVerboseLoggingLevel()int
com.android.server.wifi.WifiServiceImpl.getWifiApEnabledState()int
com.android.server.wifi.WifiServiceImpl.isMulticastEnabled()boolean
com.android.server.wifi.WifiServiceImpl.getConfiguredNetworks()java.util.List
com.android.server.wifi.WifiServiceImpl.getWifiServiceMessenger()android.os.Messenger
com.android.server.wifi.WifiServiceImpl.getConfigFile()java.lang.String
com.android.server.wifi.WifiServiceImpl.getWifiApConfiguration()android.net.wifi.WifiConfiguration
com.android.server.wifi.WifiServiceImpl.getConnectionStatistics()android.net.wifi.WifiConnectionStatistics
com.android.server.wifi.WifiServiceImpl.getAllowScansWithTraffic()int
com.android.server.wifi.WifiServiceImpl.setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)void
com.android.server.ConnectivityService.requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)android.net.NetworkRequest
com.android.server.ethernet.EthernetServiceImpl.setConfiguration(android.net.IpConfiguration)void
android.net.ConnectivityManager.enforceTetherChangePermission(android.content.Context)void
com.android.server.wifi.WifiServiceImpl.setWifiApConfiguration(android.net.wifi.WifiConfiguration)void
com.android.server.wifi.WifiServiceImpl.clearBlacklist()void
com.android.server.wifi.WifiServiceImpl.enableNetwork(int,boolean)boolean
com.android.server.wifi.WifiServiceImpl.setWifiEnabled(boolean)boolean
com.android.server.wifi.WifiService.onBootPhase(int)void
com.android.server.wifi.WifiServiceImpl.stopBatchedScan(android.net.wifi.BatchedScanSettings)void
com.android.server.wifi.WifiServiceImpl.addToBlacklist(java.lang.String)void
com.android.server.wifi.WifiServiceImpl.removeNetwork(int)boolean
com.android.server.wifi.WifiServiceImpl.disableNetwork(int)boolean
com.android.server.wifi.WifiServiceImpl.addOrUpdateNetwork(android.net.wifi.WifiConfiguration)int
com.android.server.wifi.WifiServiceImpl.pollBatchedScan()void
com.android.server.wifi.WifiServiceImpl.checkAndStartWifi()void
com.android.server.wifi.WifiServiceImpl.reassociate()void
com.android.server.wifi.WifiServiceImpl.reconnect()void
com.android.server.wifi.WifiServiceImpl.disconnect()void
com.android.server.wifi.WifiServiceImpl.saveConfiguration()boolean
com.android.server.wifi.WifiServiceImpl.setFrequencyBand(int,boolean)void
com.android.server.wm.WindowManagerService.keyguardGoingAway()void
com.android.server.pm.PackageManagerService.installPackage(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String)void
com.android.server.pm.PackageManagerService.installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String,int)void
com.android.server.pm.PackageInstallerService.setPermissionsResult(int,boolean)void
com.android.server.pm.PackageManagerService.installExistingPackageAsUser(java.lang.String,int)int
com.android.internal.telephony.UiccPhoneBookController.getAdnRecordsInEf(int)java.util.List
com.android.internal.telephony.UiccPhoneBookController.getAdnRecordsInEfForSubscriber()java.util.List
com.android.internal.telephony.SubscriptionController.getSubInfoForSubscriber(long)android.telephony.SubInfoRecord
com.android.internal.telephony.PhoneSubInfoController.getVoiceMailNumber()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getLine1NumberForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getGroupIdLevel1ForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoProxy.getImei()java.lang.String
com.android.internal.telephony.SubscriptionController.setDataRoaming(int,long)int
com.android.internal.telephony.PhoneSubInfoController.getLine1AlphaTag()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getVoiceMailNumberForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getMsisdnForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getMsisdn()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getVoiceMailAlphaTagForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getVoiceMailAlphaTag()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getLine1AlphaTagForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getGroupIdLevel1()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getLine1Number()java.lang.String
com.android.internal.telephony.SubscriptionController.setDisplayNumberFormat(int,long)int
com.android.internal.telephony.SubInfoRecordUpdater.updateSimInfoByIccId()void
com.android.internal.telephony.SubscriptionController.clearDefaultsForInactiveSubIds()void
com.android.internal.telephony.SubscriptionController.setDisplayName(java.lang.String,long)int
com.android.internal.telephony.SubInfoRecordUpdater.handleMessage(android.os.Message)void
com.android.internal.telephony.PhoneSubInfoController.getDeviceId()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getDeviceIdForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfo.getImei()java.lang.String
com.android.internal.telephony.SubscriptionController.getSubInfoUsingIccId(java.lang.String)java.util.List
com.android.internal.telephony.SubscriptionController.setDisplayNumber(java.lang.String,long)int
com.android.internal.telephony.SubscriptionController.setDisplayNameUsingSrc(java.lang.String)int
com.android.internal.telephony.SubscriptionController.setColor(int,long)int
com.android.internal.telephony.SubscriptionController.clearSubInfo()int
com.android.internal.telephony.SubscriptionController.addSubInfoRecord(java.lang.String,int)int
com.android.internal.telephony.SubscriptionController.getAllSubInfoCount()int
com.android.internal.telephony.SubscriptionController.getActiveSubInfoCount()int
com.android.internal.telephony.SubscriptionController.getActiveSubInfoList()java.util.List
com.android.internal.telephony.SubscriptionController.getAllSubInfoList()java.util.List
com.android.internal.telephony.SubscriptionController.getSubInfoUsingSlotId(int)java.util.List
com.android.internal.telephony.PhoneSubInfoController.getImeiForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getSubscriberId()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getDeviceSvn()java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getIccSerialNumberForSubscriber(long)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getIccSerialNumber()java.lang.String
com.android.internal.telephony.SubscriptionController.getSubInfoUsingSlotIdWithCheck(int,boolean)java.util.List
com.android.internal.telephony.PhoneSubInfoController.getSubscriberIdForSubscriber(long)java.lang.String
com.android.internal.telephony.UiccSmsController.updateMessageOnIccEf(java.lang.String,int,int,[byte)boolean
com.android.internal.telephony.IccSmsInterfaceManager.sendStoredMultipartText(java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)void
com.android.internal.telephony.UiccSmsController.sendMultipartTextForSubscriber(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)void
com.android.internal.telephony.UiccSmsController.sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.UiccSmsController.copyMessageToIccEf(java.lang.String,int,[)boolean
com.android.internal.telephony.UiccSmsController.copyMessageToIccEfForSubscriber(int,[)boolean
com.android.internal.telephony.UiccSmsController.sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)void
com.android.internal.telephony.UiccSmsController.sendTextForSubscriber(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.UiccSmsController.sendData(java.lang.String,java.lang.String,java.lang.String,int,[android.app.PendingIntent)void
com.android.internal.telephony.UiccSmsController.sendDataForSubscriber(java.lang.String,java.lang.String,int,[android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManager.sendStoredText(java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.UiccSmsController.updateMessageOnIccEfForSubscriber(int,int,[byte)boolean
com.android.internal.telephony.UiccSmsController.sendStoredMultipartText(android.net.Uri,java.lang.String,java.util.List,java.util.List)void
com.android.internal.telephony.UiccSmsController.sendStoredText(android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.server.wallpaper.WallpaperManagerService.setWallpaper(java.lang.String)android.os.ParcelFileDescriptor
com.android.internal.telephony.UiccPhoneBookController.updateAdnRecordsInEfByIndexForSubscriber(java.lang.String,int,java.lang.String)boolean
com.android.internal.telephony.UiccPhoneBookController.updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)boolean
com.android.internal.telephony.UiccPhoneBookController.updateAdnRecordsInEfBySearchForSubscriber(java.lang.String,java.lang.String,java.lang.String,java.lang.String)boolean
com.android.internal.telephony.UiccPhoneBookController.updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)boolean
com.android.server.WifiService.getWifiApConfiguration()android.net.wifi.WifiConfiguration
com.android.server.WifiService.pingSupplicant()boolean
com.android.server.WifiService.getDhcpInfo()android.net.DhcpInfo
com.android.server.WifiService.getScanResults()java.util.List
com.android.server.WifiService.getConnectionInfo()android.net.wifi.WifiInfo
com.android.server.WifiService.getWifiEnabledState()int
com.android.server.WifiService.getConfiguredNetworks()java.util.List
com.android.server.WifiService.getWifiApEnabledState()int
com.android.server.WifiService.getFrequencyBand()int
com.android.server.WifiService.getWifiStateMachineMessenger()android.os.Messenger
com.android.server.WifiService.getWifiServiceMessenger()android.os.Messenger
com.android.server.WifiService.getConfigFile()java.lang.String
com.android.server.WifiService.isMulticastEnabled()boolean
com.android.server.ConnectivityService.setGlobalProxy(android.net.ProxyProperties)void
com.android.server.WifiService.startScan(boolean)void
com.android.server.WifiService.addOrUpdateNetwork(android.net.wifi.WifiConfiguration)int
com.android.server.WifiService.setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)void
com.android.server.WifiService.setWifiApConfiguration(android.net.wifi.WifiConfiguration)void
com.android.server.WifiService.reassociate()void
com.android.server.WifiService.addToBlacklist(java.lang.String)void
com.android.server.WifiService.setWifiEnabled(boolean)boolean
com.android.server.WifiService.disconnect()void
com.android.server.WifiService.clearBlacklist()void
com.android.server.WifiService.setFrequencyBand(int,boolean)void
com.android.server.WifiService.setCountryCode(java.lang.String,boolean)void
com.android.server.WifiService.saveConfiguration()boolean
com.android.server.WifiService.disableNetwork(int)boolean
com.android.server.WifiService.enableNetwork(int,boolean)boolean
com.android.server.WifiService.removeNetwork(int)boolean
com.android.server.WifiService.reconnect()void
com.android.server.WifiService.checkAndStartWifi()void
com.android.server.am.ActivityManagerService.startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)int
com.android.server.am.ActivityManagerService.startActivities(android.app.IApplicationThread,[android.content.Intent,[java.lang.String,android.os.IBinder,android.os.Bundle,int)int
com.android.server.am.ActivityManagerService.startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)int
com.android.server.am.ActivityManagerService.startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)int
com.android.server.am.ActivityManagerService.startActivityAsUser(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)int
com.android.server.am.ActivityManagerService.startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)android.app.IActivityManager$WaitResult
com.android.server.pm.PackageManagerService.installExistingPackage(java.lang.String)int
com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendData(java.lang.String,java.lang.String,int,[android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManager.sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManager.sendData(java.lang.String,java.lang.String,int,[android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)void
com.android.internal.telephony.IccSmsInterfaceManager.sendMultipartText(java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)void
com.android.server.wifi.WifiServiceImpl.setAllowScansWhileAssociated(boolean)void
com.android.server.wifi.WifiServiceImpl.getAllowScansWhileAssociated()boolean
com.android.server.wifi.WifiServiceImpl.disableEphemeralNetwork(java.lang.String)void
com.android.server.ConnectivityService.pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)android.net.NetworkRequest
com.android.server.wifi.WifiServiceImpl.startLocationRestrictedScan(android.os.WorkSource)void
com.android.internal.telephony.UiccPhoneBookController.getAdnRecordsInEfForSubscriber(int,int)java.util.List
com.android.server.net.NetworkPolicyManagerService.systemReady()void
com.android.internal.telephony.SubscriptionController.setDisplayNameUsingSrc(java.lang.String,int,long)int
com.android.internal.telephony.SubscriptionController.getActiveSubscriptionInfo(int)android.telephony.SubscriptionInfo
com.android.internal.telephony.PhoneSubInfoController.getSubscriberIdForSubscriber(int)java.lang.String
com.android.internal.telephony.SubscriptionController.setDisplayNumber(java.lang.String,int)int
com.android.internal.telephony.PhoneSubInfoController.getDeviceSvnUsingSubId(int)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getVoiceMailAlphaTagForSubscriber(int)java.lang.String
com.android.internal.telephony.SubscriptionController.setDisplayName(java.lang.String,int)int
com.android.internal.telephony.PhoneSubInfoController.getIccSerialNumberForSubscriber(int)java.lang.String
com.android.internal.telephony.SubscriptionController.setIconTint(int,int)int
com.android.internal.telephony.PhoneSubInfoController.getGroupIdLevel1ForSubscriber(int)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getNaiForSubscriber(int)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getImeiForSubscriber(int)java.lang.String
com.android.internal.telephony.PhoneSubInfo.getNai()java.lang.String
com.android.internal.telephony.SubscriptionController.setDataRoaming(int,int)int
com.android.internal.telephony.PhoneSubInfoProxy.getNai()java.lang.String
com.android.internal.telephony.SubscriptionController.getActiveSubscriptionInfoList()java.util.List
com.android.internal.telephony.PhoneSubInfoController.getLine1AlphaTagForSubscriber(int)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getMsisdnForSubscriber(int)java.lang.String
com.android.internal.telephony.PhoneSubInfoController.getVoiceMailNumberForSubscriber(int)java.lang.String
com.android.internal.telephony.SubscriptionController.getActiveSubscriptionInfoForSimSlotIndex(int)android.telephony.SubscriptionInfo
com.android.internal.telephony.PhoneSubInfoController.getLine1NumberForSubscriber(int)java.lang.String
com.android.internal.telephony.SubscriptionController.getActiveSubscriptionInfoForIccId(java.lang.String)android.telephony.SubscriptionInfo
com.android.internal.telephony.UiccSmsController.sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)void
com.android.internal.telephony.UiccSmsController.sendDataForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,int,[android.app.PendingIntent)void
com.android.internal.telephony.UiccSmsController.sendStoredMultipartText(int,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)void
com.android.internal.telephony.UiccSmsController.sendStoredText(int,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.UiccSmsController.sendTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.UiccSmsController.updateMessageOnIccEfForSubscriber(int,java.lang.String,int,int,[byte)boolean
com.android.internal.telephony.UiccSmsController.copyMessageToIccEfForSubscriber(int,java.lang.String,int,[)boolean
com.android.internal.telephony.UiccPhoneBookController.updateAdnRecordsInEfBySearchForSubscriber(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)boolean
com.android.internal.telephony.UiccPhoneBookController.updateAdnRecordsInEfByIndexForSubscriber(int,int,java.lang.String,java.lang.String,int,java.lang.String)boolean
com.android.server.WifiService.startWifi()void
com.android.server.WifiService.stopWifi()void
com.android.server.am.ActivityManagerService.startActivities(android.app.IApplicationThread,[android.content.Intent,[java.lang.String,android.os.IBinder,android.os.Bundle)int
com.android.server.am.ActivityManagerService.startActivityInPackage(int,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.os.Bundle)int
com.android.server.am.ActivityManagerService.switchUser(int)boolean
com.android.server.am.ActivityManagerService.startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)android.app.IActivityManager$WaitResult
com.android.server.am.ActivityManagerService.startActivitiesInPackage(int,[android.content.Intent,[java.lang.String,android.os.IBinder,android.os.Bundle)int
com.android.server.am.ActivityManagerService.startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle)int
com.android.server.PowerManagerService.setStayOnSetting(int)void
android.net.wifi.p2p.WifiP2pService.getMessenger()android.os.Messenger
com.android.internal.telephony.IccSmsInterfaceManager.sendData(java.lang.String,java.lang.String,int,[byte,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendData(java.lang.String,java.lang.String,int,[byte,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.cdma.RuimSmsInterfaceManager.copyMessageToIccEf(int,[byte,[byte)boolean
com.android.internal.telephony.cdma.RuimSmsInterfaceManager.updateMessageOnIccEf(int,int,[byte)boolean
com.android.internal.telephony.gsm.SimSmsInterfaceManager.copyMessageToIccEf(int,[byte,[byte)boolean
com.android.internal.telephony.gsm.SimSmsInterfaceManager.updateMessageOnIccEf(int,int,[byte)boolean
com.android.phone.PhoneInterfaceManager.isSimPinEnabled()boolean
com.android.server.TelephonyRegistry.listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)void
com.android.server.WallpaperManagerService.setWallpaper(java.lang.String)android.os.ParcelFileDescriptor
com.android.server.WifiService.getWifiServiceMessenger()android.os.Messenger
com.android.server.WifiService.getWifiStateMachineMessenger()android.os.Messenger
com.android.server.am.ActivityManagerService.getRecentTasks(int,int)java.util.List
com.android.server.am.ActivityManagerService.getTasks(int,int,android.app.IThumbnailReceiver)java.util.List
com.android.server.net.NetworkPolicyManagerService.getNetworkPolicies()android.net.NetworkPolicy[]
android.accounts.AccountAuthenticatorActivity.clearWallpaper()void
android.accounts.AccountAuthenticatorActivity.setWallpaper(android.graphics.Bitmap)void
android.accounts.AccountAuthenticatorActivity.setWallpaper(java.io.InputStream)void
android.app.Activity.clearWallpaper()void
android.app.Activity.setWallpaper(android.graphics.Bitmap)void
android.app.Activity.setWallpaper(java.io.InputStream)void
android.app.ActivityGroup.clearWallpaper()void
android.app.ActivityGroup.setWallpaper(android.graphics.Bitmap)void
android.app.ActivityGroup.setWallpaper(java.io.InputStream)void
android.app.ActivityManager.getRecentTasks(int,int)java.util.List
android.app.ActivityManager.getRunningTasks(int)java.util.List
android.app.AliasActivity.clearWallpaper()void
android.app.AliasActivity.setWallpaper(android.graphics.Bitmap)void
android.app.AliasActivity.setWallpaper(java.io.InputStream)void
android.app.Application.clearWallpaper()void
android.app.Application.setWallpaper(android.graphics.Bitmap)void
android.app.Application.setWallpaper(java.io.InputStream)void
android.app.ExpandableListActivity.clearWallpaper()void
android.app.ExpandableListActivity.setWallpaper(android.graphics.Bitmap)void
android.app.ExpandableListActivity.setWallpaper(java.io.InputStream)void
android.app.KeyguardManager$KeyguardLock.disableKeyguard()void
android.app.KeyguardManager$KeyguardLock.reenableKeyguard()void
android.app.KeyguardManager.exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)void
android.app.ListActivity.clearWallpaper()void
android.app.ListActivity.setWallpaper(android.graphics.Bitmap)void
android.app.ListActivity.setWallpaper(java.io.InputStream)void
android.app.NativeActivity.clearWallpaper()void
android.app.NativeActivity.setWallpaper(android.graphics.Bitmap)void
android.app.NativeActivity.setWallpaper(java.io.InputStream)void
android.app.TabActivity.clearWallpaper()void
android.app.TabActivity.setWallpaper(android.graphics.Bitmap)void
android.app.TabActivity.setWallpaper(java.io.InputStream)void
android.app.WallpaperManager.clear()void
android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)void
android.app.WallpaperManager.setResource(int)void
android.app.WallpaperManager.setStream(java.io.InputStream)void
android.app.backup.BackupAgentHelper.clearWallpaper()void
android.app.backup.BackupAgentHelper.setWallpaper(android.graphics.Bitmap)void
android.app.backup.BackupAgentHelper.setWallpaper(java.io.InputStream)void
android.content.ContextWrapper.clearWallpaper()void
android.content.ContextWrapper.setWallpaper(android.graphics.Bitmap)void
android.content.ContextWrapper.setWallpaper(java.io.InputStream)void
android.content.MutableContextWrapper.clearWallpaper()void
android.content.MutableContextWrapper.setWallpaper(android.graphics.Bitmap)void
android.content.MutableContextWrapper.setWallpaper(java.io.InputStream)void
android.inputmethodservice.InputMethodService.clearWallpaper()void
android.inputmethodservice.InputMethodService.setWallpaper(android.graphics.Bitmap)void
android.inputmethodservice.InputMethodService.setWallpaper(java.io.InputStream)void
android.net.ConnectivityManager.requestRouteToHost(int,int)boolean
android.net.ConnectivityManager.setNetworkPreference(int)void
android.net.ConnectivityManager.startUsingNetworkFeature(int,java.lang.String)int
android.net.ConnectivityManager.stopUsingNetworkFeature(int,java.lang.String)int
android.net.VpnService.clearWallpaper()void
android.net.VpnService.setWallpaper(android.graphics.Bitmap)void
android.net.VpnService.setWallpaper(java.io.InputStream)void
android.net.wifi.WifiManager.addNetwork(android.net.wifi.WifiConfiguration)int
android.net.wifi.WifiManager.disableNetwork(int)boolean
android.net.wifi.WifiManager.disconnect()boolean
android.net.wifi.WifiManager.enableNetwork(int,boolean)boolean
android.net.wifi.WifiManager.getConfiguredNetworks()java.util.List
android.net.wifi.WifiManager.getConnectionInfo()android.net.wifi.WifiInfo
android.net.wifi.WifiManager.getDhcpInfo()android.net.DhcpInfo
android.net.wifi.WifiManager.getScanResults()java.util.List
android.net.wifi.WifiManager.getWifiState()int
android.net.wifi.WifiManager.isWifiEnabled()boolean
android.net.wifi.WifiManager.pingSupplicant()boolean
android.net.wifi.WifiManager.reassociate()boolean
android.net.wifi.WifiManager.reconnect()boolean
android.net.wifi.WifiManager.removeNetwork(int)boolean
android.net.wifi.WifiManager.saveConfiguration()boolean
android.net.wifi.WifiManager.setWifiEnabled(boolean)boolean
android.net.wifi.WifiManager.startScan()boolean
android.net.wifi.WifiManager.updateNetwork(android.net.wifi.WifiConfiguration)int
android.net.wifi.p2p.WifiP2pManager.initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)android.net.wifi.p2p.WifiP2pManager$Channel
android.telephony.SmsManager.sendDataMessage(java.lang.String,java.lang.String,short,[byte,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)void
android.telephony.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.TelephonyManager.getDeviceId()java.lang.String
android.telephony.TelephonyManager.getDeviceSoftwareVersion()java.lang.String
android.telephony.TelephonyManager.getLine1Number()java.lang.String
android.telephony.TelephonyManager.getSimSerialNumber()java.lang.String
android.telephony.TelephonyManager.getSubscriberId()java.lang.String
android.telephony.TelephonyManager.getVoiceMailAlphaTag()java.lang.String
android.telephony.TelephonyManager.getVoiceMailNumber()java.lang.String
android.telephony.TelephonyManager.listen(android.telephony.PhoneStateListener,int)void
android.telephony.gsm.SmsManager.sendDataMessage(java.lang.String,java.lang.String,short,[byte,android.app.PendingIntent,android.app.PendingIntent)void
android.telephony.gsm.SmsManager.sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)void
android.telephony.gsm.SmsManager.sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
android.test.IsolatedContext.clearWallpaper()void
android.test.IsolatedContext.setWallpaper(android.graphics.Bitmap)void
android.test.IsolatedContext.setWallpaper(java.io.InputStream)void
android.test.RenamingDelegatingContext.clearWallpaper()void
android.test.RenamingDelegatingContext.setWallpaper(android.graphics.Bitmap)void
android.test.RenamingDelegatingContext.setWallpaper(java.io.InputStream)void
android.test.mock.MockApplication.clearWallpaper()void
android.test.mock.MockApplication.setWallpaper(android.graphics.Bitmap)void
android.test.mock.MockApplication.setWallpaper(java.io.InputStream)void
android.view.ContextThemeWrapper.clearWallpaper()void
android.view.ContextThemeWrapper.setWallpaper(android.graphics.Bitmap)void
android.view.ContextThemeWrapper.setWallpaper(java.io.InputStream)void
com.android.server.am.ActivityManagerService.getRecentTasks(int,int,int)java.util.List
android.service.dreams.DreamService.clearWallpaper()void
android.service.dreams.DreamService.setWallpaper(android.graphics.Bitmap)void
android.service.dreams.DreamService.setWallpaper(java.io.InputStream)void
com.android.internal.telephony.IccSmsInterfaceManager.copyMessageToIccEf(java.lang.String,int,[byte,[byte)boolean
com.android.internal.telephony.IccSmsInterfaceManagerProxy.copyMessageToIccEf(java.lang.String,int,[byte,[byte)boolean
com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendData(java.lang.String,java.lang.String,java.lang.String,int,[byte,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)void
com.android.internal.telephony.IccSmsInterfaceManagerProxy.sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void
com.android.internal.telephony.IccSmsInterfaceManagerProxy.updateMessageOnIccEf(java.lang.String,int,int,[byte)boolean
com.android.server.wifi.WifiService.getWifiServiceMessenger()android.os.Messenger
com.android.server.wifi.WifiService.getWifiStateMachineMessenger()android.os.Messenger
com.android.server.wifi.WifiService.startScan()void
android.net.wifi.WifiManager.isScanAlwaysAvailable()boolean
android.telephony.TelephonyManager.getGroupIdLevel1()java.lang.String
com.android.internal.telephony.SubscriptionController.setDisplayNameUsingSrc(java.lang.String,long,long)int
com.android.internal.telephony.UiccSmsController.copyMessageToIccEf(java.lang.String,int,[byte,[byte)boolean
com.android.internal.telephony.UiccSmsController.copyMessageToIccEfForSubscriber(long,java.lang.String,int,[byte,[byte)boolean
com.android.internal.telephony.UiccSmsController.updateMessageOnIccEfForSubscriber(long,java.lang.String,int,int,[byte)boolean
com.android.phone.PhoneInterfaceManager.getCalculatedPreferredNetworkType()int
com.android.phone.PhoneInterfaceManager.getLine1AlphaTagForDisplay(long)java.lang.String
com.android.phone.PhoneInterfaceManager.getLine1NumberForDisplay(long)java.lang.String
com.android.phone.PhoneInterfaceManager.getPcscfAddress(java.lang.String)java.lang.String[]
com.android.phone.PhoneInterfaceManager.getSimplifiedNetworkSettingsEnabledForSubscriber(long)boolean
com.android.server.MmsServiceBroker$BinderService.sendMessage(long,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)void
com.android.server.MmsServiceBroker$BinderService.sendStoredMessage(long,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)void
com.android.server.job.JobSchedulerService$JobSchedulerStub.schedule(android.app.job.JobInfo)int
com.android.server.power.PowerManagerService$BinderService.setStayOnSetting(int)void
com.android.server.telecom.TelecomServiceImpl.getCurrentTtyMode()int
com.android.server.telecom.TelecomServiceImpl.isInCall()boolean
com.android.server.telecom.TelecomServiceImpl.isRinging()boolean
com.android.server.telecom.TelecomServiceImpl.isTtySupported()boolean
com.android.server.telecom.TelecomServiceImpl.showInCallScreen(boolean)void
com.android.server.wifi.WifiServiceImpl.getWifiServiceMessenger()android.os.Messenger
com.android.server.wifi.p2p.WifiP2pServiceImpl.getMessenger()android.os.Messenger
com.android.server.wm.WindowManagerService.keyguardGoingAway(boolean,boolean)void
android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void
android.net.wifi.WifiManager.is5GHzBandSupported()boolean
android.net.wifi.WifiManager.isDeviceToApRttSupported()boolean
android.net.wifi.WifiManager.isEnhancedPowerReportingSupported()boolean
android.net.wifi.WifiManager.isP2pSupported()boolean
android.net.wifi.WifiManager.isPreferredNetworkOffloadSupported()boolean
android.net.wifi.WifiManager.isTdlsSupported()boolean
android.service.voice.VoiceInteractionService.clearWallpaper()void
android.service.voice.VoiceInteractionService.setWallpaper(android.graphics.Bitmap)void
android.service.voice.VoiceInteractionService.setWallpaper(java.io.InputStream)void
android.telecom.TelecomManager.isInCall()boolean
android.telecom.TelecomManager.showInCallScreen(boolean)void
android.telephony.PhoneNumberUtils.isVoiceMailNumber(java.lang.String)boolean
android.telephony.SmsManager.divideMessage(java.lang.String)java.util.ArrayList
android.telephony.SmsManager.sendMultimediaMessage(android.content.Context,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)void
android.telephony.gsm.SmsManager.divideMessage(java.lang.String)java.util.ArrayList
com.android.phone.PhoneInterfaceManager.getDeviceId()java.lang.String
com.android.phone.PhoneInterfaceManager.getLine1AlphaTagForDisplay(int)java.lang.String
com.android.phone.PhoneInterfaceManager.getLine1NumberForDisplay(int)java.lang.String
com.android.phone.PhoneInterfaceManager.isVideoCallingEnabled()boolean
com.android.server.MmsServiceBroker$BinderService.sendMessage(int,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)void
com.android.server.MmsServiceBroker$BinderService.sendStoredMessage(int,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)void
com.android.server.TelephonyRegistry.addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)void
com.android.server.net.NetworkPolicyManagerService.setRestrictBackground(boolean)void
com.android.server.telecom.TelecomService$TelecomServiceImpl.getCallCapablePhoneAccounts()java.util.List
com.android.server.telecom.TelecomService$TelecomServiceImpl.getCurrentTtyMode()int
com.android.server.telecom.TelecomService$TelecomServiceImpl.getDefaultOutgoingPhoneAccount(java.lang.String)android.telecom.PhoneAccountHandle
com.android.server.telecom.TelecomService$TelecomServiceImpl.getLine1Number(android.telecom.PhoneAccountHandle)java.lang.String
com.android.server.telecom.TelecomService$TelecomServiceImpl.getPhoneAccountsSupportingScheme(java.lang.String)java.util.List
com.android.server.telecom.TelecomService$TelecomServiceImpl.getSimCallManagers()java.util.List
com.android.server.telecom.TelecomService$TelecomServiceImpl.hasVoiceMailNumber(android.telecom.PhoneAccountHandle)boolean
com.android.server.telecom.TelecomService$TelecomServiceImpl.isInCall()boolean
com.android.server.telecom.TelecomService$TelecomServiceImpl.isRinging()boolean
com.android.server.telecom.TelecomService$TelecomServiceImpl.isTtySupported()boolean
com.android.server.telecom.TelecomService$TelecomServiceImpl.isVoiceMailNumber(android.telecom.PhoneAccountHandle,java.lang.String)boolean
com.android.server.telecom.TelecomService$TelecomServiceImpl.showInCallScreen(boolean)void
com.android.server.wifi.WifiServiceImpl.disableEphemeralNetwork(java.lang.String)void
android.app.ActivityManager.getRunningAppProcesses()java.util.List
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)void
android.telephony.SubscriptionManager.addOnSubscriptionsChangedListener(android.telephony.SubscriptionManager$OnSubscriptionsChangedListener)void
android.telephony.SubscriptionManager.getActiveSubscriptionInfo(int)android.telephony.SubscriptionInfo
android.telephony.SubscriptionManager.getActiveSubscriptionInfoCount()int
android.telephony.SubscriptionManager.getActiveSubscriptionInfoForSimSlotIndex(int)android.telephony.SubscriptionInfo
android.telephony.SubscriptionManager.getActiveSubscriptionInfoList()java.util.List
com.android.server.LockSettingsService.getBoolean(java.lang.String,boolean,int)boolean
com.android.server.LockSettingsService.getLong(java.lang.String,long,int)long
com.android.server.LockSettingsService.getString(java.lang.String,java.lang.String,int)java.lang.String
com.android.server.wallpaper.WallpaperManagerService.clearWallpaper(java.lang.String)void
com.android.server.wallpaper.WallpaperManagerService.setWallpaper(java.lang.String,java.lang.String)android.os.ParcelFileDescriptor
android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.app.PendingIntent)void
android.net.ConnectivityManager.registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void
android.net.ConnectivityManager.requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager$NetworkCallback)void
android.net.ConnectivityManager.startUsingNetworkFeature(int,java.lang.String)int
android.net.wifi.WifiManager.enableNetwork(int,boolean)boolean
com.android.internal.telephony.UiccSmsController.copyMessageToIccEfForSubscriber(int,java.lang.String,int,[byte,[byte)boolean
com.android.server.InputMethodManagerService.showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)void
com.android.server.LockSettingsService.getSeparateProfileChallengeEnabled(int)boolean
com.android.server.LockSettingsService.systemReady()void
com.android.server.wallpaper.WallpaperManagerService.clearWallpaper(java.lang.String,int,int)void
com.android.server.wallpaper.WallpaperManagerService.setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback)android.os.ParcelFileDescriptor
com.android.server.wifi.WifiServiceImpl.getCurrentNetwork()android.net.Network
com.android.server.wifi.WifiServiceImpl.getEnableAutoJoinWhenAssociated()boolean
com.android.server.wifi.WifiServiceImpl.getMatchingWifiConfig(android.net.wifi.ScanResult)android.net.wifi.WifiConfiguration
com.android.server.wifi.WifiServiceImpl.requestActivityInfo(android.os.ResultReceiver)void
com.android.server.wifi.WifiServiceImpl.setEnableAutoJoinWhenAssociated(boolean)boolean
com.android.server.wm.WindowManagerService.keyguardGoingAway(int)void
android.app.JobSchedulerImpl.schedule(android.app.job.JobInfo)int
android.app.WallpaperManager.clear(int)void
android.app.WallpaperManager.setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean)int
android.app.WallpaperManager.setBitmap(android.graphics.Bitmap,android.graphics.Rect,boolean,int)int
android.app.WallpaperManager.setResource(int,int)int
android.app.WallpaperManager.setStream(java.io.InputStream,android.graphics.Rect,boolean)int
android.app.WallpaperManager.setStream(java.io.InputStream,android.graphics.Rect,boolean,int)int
android.app.admin.DevicePolicyManager.getWifiMacAddress(android.content.ComponentName)java.lang.String
android.app.backup.BackupManager.dataChanged()void
android.app.backup.BackupManager.dataChanged(java.lang.String)void
android.net.ConnectivityManager.registerDefaultNetworkCallback(android.net.ConnectivityManager$NetworkCallback)void
android.net.wifi.WifiManager.cancelWps(android.net.wifi.WifiManager$WpsCallback)void
android.net.wifi.WifiManager.startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager$WpsCallback)void
android.service.quicksettings.TileService.clearWallpaper()void
android.service.quicksettings.TileService.setWallpaper(android.graphics.Bitmap)void
android.service.quicksettings.TileService.setWallpaper(java.io.InputStream)void
android.telephony.TelephonyManager.getDeviceId(int)java.lang.String
android.view.inputmethod.InputMethodManager.showInputMethodAndSubtypeEnabler(java.lang.String)void
com.android.server.wallpaper.WallpaperManagerService.setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)android.os.ParcelFileDescriptor
java.net.URL.openConnection()java.net.URLConnection
java.net.HttpURLConnection.connect()void
org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest)org.apache.http.HttpResponse
android.app.NotificationManager.notify(int,android.app.Notification)void
java.lang.Runtime.exec(java.lang.String)java.lang.Process
android.content.ContentResolver.query(android.net.Uri,[java.lang.String,java.lang.String,[java.lang.String,java.lang.String)android.database.Cursor
android.location.LocationManager.getLastKnownLocation(java.lang.String)android.location.Location
java.net.URLConnection.connect()void
android.content.ContentResolver.delete(android.net.Uri,java.lang.String,[java.lang.String)int
android.media.MediaRecorder.setAudioSource(int)void
android.app.ActivityManager.restartPackage(java.lang.String)void
android.app.ActivityManager.killBackgroundProcesses(java.lang.String)void
android.os.PowerManager.reboot(java.lang.String)void